// * ===== string - extanded ====== * //



let string = 'Dimple text!'
// ! –°—Ç—Ä–æ–∫–∞ - –∫–∞–∫ –º–∞—Å—Å–∏–≤, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤, –Ω–æ —Å—Ç—Ä–æ–∫–∞ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–∞!
// ! –ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å  - –∑–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞!
// –¢.–µ. —Å—Ç—Ä–æ–∫–∞ –≤—Å–µ–≥–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è

console.log(string[3]);
string[0] = 'S' // –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞! 
console.log(string[0]);

string = 'Simple'
console.log(string);


// –ü–æ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∞ - —ç—Ç–æ –º–∞—Å—Å–∏–≤, —Ç–æ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ for
// –ê —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ - –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–∞, —Ç–æ –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–≥–¥–∞ for-of

for (const symbol of string) {
  console.log(symbol);
}
// * === –ú–µ—Ç–æ–¥—ã –¥–ª—è —Å—Ç—Ä–æ–∫

// 0. let count = <string>.length // —Å–≤–æ–π—Å—Ç–≤–æ -  –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏

// 1. let newString = <string>.toLowerCase() // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
// 2. let newString = <string>.toUpperCase() // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ

// 3. let newString = <string>.trim() // –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏
// –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –Ω–µ —É–±–∏—Ä–∞–µ—Ç

console.log('    Text   1 '.trim());

// **** 4. let index = <string>.indexOf(value, index = 0) // –í–æ–≤–∑—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ value, –Ω–∞—á–∏–Ω–∞—è —Å index (–ø–æ —É–º–æ–ª—á–∞–Ω–∏ –ø–æ–∏—Å–∫ —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ index = 0)
// ! –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª

console.log('Ring RongRoRo'.indexOf('Ro'));

// * 5. let hasIndex = <string>.includes(value, index = 0) // –í–æ–≤–∑—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ value –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–æ–∫–µ, –∏–Ω–∞—á–µ false
// index –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω 0

// ! –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –Ω–∞—á–∞–ª–µ <string>.startsWith(value, index)
// ! –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –∫–æ–Ω—Ü–µ <string>.endsWith(value, index)

// ? –ó–∞–º–µ–Ω—è–µ—Ç –º–Ω–æ–≥–∏–µ –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–∞—é—Ç—Å—è —Å —Ü–∏–∫–ª–∞–º–∏
// **** 6. let newString = <string>.slice(start, end = <string>.length); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∫–æ–ø–∏—Ä—É—è –≤ –Ω–µ—ë –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å –ø–æ–∑–∏—Ü–∏–∏ start –¥–æ –ø–æ–∑–∏—Ü–∏–∏ end !!!–ù–ï –í–ö–õ!!!

// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é end = <string>.length (—Ç.–µ. –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏)
console.log('text header'.slice(0, 4)); // ! 4  –Ω–µ –≤–∫–ª

// –í—ã—Ä–µ–∑–∞—Ç—å –¥–æ –ø–µ—Ä–≤–æ–≥–æ –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞:
console.log();

// const strUser = 'text header'
// const indexSpace = strUser.indexOf(' ')
// const firstWord = strUser.slice(0, indexSpace)
// console.log(firstWord);

// –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥:

const strUser = ' text header'

const clearStrUser = strUser.trim()

const firstWord = strUser.slice(0, strUser.indexOf(' '))
console.log(firstWord);



// * === Array/String (–ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ –¥–ª—è —Å—Ç—Ä–æ–∫) === * //

// * let array = <string>.split(value)  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é value
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

console.log('te! xt! 1'.split()); // ['te xt!']
console.log('te! xt! 1'.split('')); // ['t', 'e', ' ', 'x', 't', '!'] - –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
console.log('te! xt! 1'.split('!')); // ['te', ' xt', ' 1']
console.log('milk, bread, cheese, carrot'.split(', ')); // ['milk', 'bread', 'cheese', 'carrot']

// * let string = <array>.join(value) // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É, –¥–æ–±–∞–≤–ª—è—è –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å value


console.log(['milk', 'bread', 'cheese', 'carrot'].join(', '));


// * let array = <array>.reverse() // –ò–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ (–Ω–∞–æ–±–æ—Ä–æ—Ç)
// !–ú—É—Ç–∏—Ä—É–µ—Ç –∏ –ø—Ä–∏ —ç—Ç–æ–º –∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤!

// ? Best Bractice
console.log('snikers'.split('').reverse().join(''));


// –ü—Ä–æ—Å—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç–µ–±–µ –Ω—É–∂–µ–Ω split('')
// * Array.from(<string>) // –ü–æ—Å–∏–º–≤–æ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
// –£ –Ω–µ–≥–æ –≤—Å–µ–≥–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
// ! –•–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–º–∞–π–ª–∏–∫–∞–º–∏

console.log('üôÇ'.split(''));
console.log(Array.from('üôÇ'));










