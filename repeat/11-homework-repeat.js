// 1. Задача
// Создать любую переменную типа string. Вывести посимвольно в консоль двумя способами:

// for;
// for of;

// let userString = 'String';

// // for (let i = 0; i < userString.length; i++) {
// //   console.log(userString[i]);
// // }

// for (const el of userString) {
//   console.log(el);
// }

// =========================================================================== //

// 2. Задача
// Написать функцию, на вход которой подаётся строка, функция возвращает индекс последнего элемента не зависимо от количества символов.

// function getLastIndex(string) {
//   return string.length - 1
// }
// console.log(getLastIndex('text'));

// getLastIndex = string => {
//   return string.length - 1
// }
// console.log(getLastIndex('text'));
// // let user = getLastIndex('text');
// // console.log(user);
// =========================================================================== //

// 3. Задача
// Написать функцию, на вход которого подаётся строка. Функция должна вернуть первый символ, предпоследний и последний.

// function getFirstPenultimateLastSymbol(str) {
//   return [
//     str[0],
//     str[str.length - 1],
//     str[str.length - 2]
//   ]
// }
// console.log(getFirstPenultimateLastSymbol('Street'));

// getFirstPenultimateLastSymbol = str => {
//   return [
//     str[0],
//     str[str.length - 1],
//     str[str.length - 2]
//   ]
// }
// console.log(getFirstPenultimateLastSymbol('Street'));
// =========================================================================== //

// 4. Задача
// Написать функцию, на вход которой подаётся две строки. Если первая строка длинее второй, то к первой доклеивается вторая, иначе - наоборот. Функция возвращает результирующую строку.
1.
// function resultString(str1, str2) {
//   if (str1.length > str2.length) {
//     return str1 += str2
//   } else if (str2 > str1) {
//     return str2 += str1
//   }
// }

// console.log(resultString('day', 'week'));
2.
// function resultString(str1, str2) {
//   if (str1.length > str2.length && str2.length > str1.length) {
//     return str1 += str2
//   } else {
//     return str2 += str1
//   }
// }
// console.log(resultString('day', 'week'));

3.
// function resultString(str1, str2) {
//   return str1.length > str2.length ? str1 += str2 : str2 += str1
// }
// console.log(resultString('day', 'week'));

4.
// resultString = (str1, str2) => {
//   return str1.length > str2.length ? str1 += str2 : str2 += str1
// }
// console.log(resultString('day', 'week'));

// =========================================================================== //

// 5. Задача
// Написать функцию, на вход которой подаётся строка, функция возвращает количество, встречающихся букв a незасивимо от того какой язык: русский или английский.

// function getQuantityLetterA(str) {
//   let quantityLetter = 0;
//   for (const el of str) {
//     if (el === 'a') {
//       quantityLetter++;
//     } else if (el === 'а') {
//       quantityLetter++
//     }
//   }
//   return quantityLetter
// }
// // console.log(getQuantityLetterA('parallelogramm'));
// console.log(getQuantityLetterA('параллелограмм'));


// getQuantityLetterA = str => {
//   let quantityLetter = 0;
//   for (const el of str) {
//     if (el === 'a') {
//       quantityLetter++;
//     }
//   }
//   return quantityLetter
// }
// console.log(getQuantityLetterA('parallelogramm'));


// getQuantityLetterA = str => {
//   let quantityLetter = 0;
//   for (const el of str) {
//     (el === 'a' || el === 'а') && quantityLetter++
//   }
//   return quantityLetter
// }
// // console.log(getQuantityLetterA('parallelogramm'));
// console.log(getQuantityLetterA('параллелограмм'));
// =========================================================================== //

// 6. Задача
// ??Написать функцию, на вход которой подаётся 2 параметра(1 параметр - строка, 2 параметр - символ). Функция возвращает число - количество встречающихся символов в строке.

1.
// function getSymbolInTheLine(str, symbol) {
//   let countSymbol = 0;
//   for (const el of str) {
//     if (el === symbol) {
//       countSymbol++
//     }
//   }
//   return countSymbol
// }
// console.log(getSymbolInTheLine('tu-ru-ru', '-'));

2.
// getSymbolInTheLine = (str, symbol) => {
//   let countSymbol = 0;
//   for (const el of str) {
//     if (el === symbol) countSymbol++
//   }
//   return countSymbol
// }
// console.log(getSymbolInTheLine('tu-ru-ru', '-'));


// * Написать функцию, на вход которой подаётся 2 параметра(1 параметр - массив, 2 параметр - число). Функция возвращает другое число - количество встречающихся чисел (переданный втором параметром) в массиве

1.
// function anoverNumberInArray(arr, num) {
//   const newArr = [];
//   for (let i = 0; i < arr.length; i++) {
//     if (arr[i] === num) {
//       newArr.push(arr[i])
//     }
//   }
//   return newArr
// }
// console.log(anoverNumberInArray([1, 5, 3, 4, 5], 5));

2.
// anoverNumberInArray = (arr, num) => {
//   const newArr = [];
//   for (let i = 0; i < arr.length; i++) {
//     if (arr[i] === num) newArr.push(arr[i])
//   }
//   return newArr
// }
// console.log(anoverNumberInArray([1, 5, 3, 4, 5], 5));

// * Написать функцю, на вход которой подаётся массив чисел
// Функция возвращает количество чётных чисел

1.
// function getEvenNumbers(array) {
//   const newArray = [];
//   for (const el of array) {
//     if (el % 2 === 0) {
//       newArray.push(el)
//     }
//   }
//   return newArray
// }
// console.log(getEvenNumbers([2, 4, 9, 8, 12, 15, 64, 88]));

2.
// function getEvenNumbers(array) {
//   const newArray = [];
//   for (const el of array) {
//     if (el % 2 === 0) {
//       newArray.push(el)
//     }
//   }
//   return newArray
// }
// console.log(getEvenNumbers([2, 4, 9, 8, 12, 15, 64, 88]));


// =========================================================================== //

// 7. Задача
// Написать функцию, на вход которой подаётся 2 строки. Функция проверяет содержится ли вторая строка в первой.

// let testStr = 'Hello world2';
// let queryStr = 'world2';

// // function checkSecondStrInFirst(str1, str2) {
// //   return str1.includes(str2);
// // }

// checkSecondStrInFirst = (str1, str2) => {
//   return str1.includes(str2);
// }

// console.log(checkSecondStrInFirst(testStr, queryStr));

// =========================================================================== //

// FIXME: 8. Задача
// Написать функцию, на вход которой подаётся 2 строки. Функция проверяет равны ли эти строки независимо от регистра.

// let userStr1 = 'HELLO WORLD';
// let userStr2 = 'hello world';

// // function checkSecondStr(str1, str2) {
// //   return str1.toLowerCase() === str2.toLowerCase();
// // }

// checkSecondStr = (str1, str2) => {
//   return str1.toLowerCase() === str2.toLowerCase();
// }

// console.log(checkSecondStr(userStr1, userStr2));

// =========================================================================== //

// 9. Задача
// ? Написать функцию, на вход которой подаётся 3 строки, которая проверяет есть вторая или третья строка в первой. Функция может работать как с двумя переменными, так и стремя.


// let userStr1 = 'One two three';
// let userStr2 = 'two';
// let userStr3 = 'three';

// // function checkStrInFirstString(str1, str2, str3) {
// //   return str1.includes(str2) && str1.includes(str3);
// // }

// // checkStrInFirstString = (str1, str2, str3) => {
// //   return str1.includes(str2) && str1.includes(str3);
// // }

// console.log(checkStrInFirstString(userStr1, userStr2, userStr3));

// =========================================================================== //

// 10. Задача
// Написать функцию, на вход которой подаётся строка. Функция возвращает строку в нижнем регистре и убирает лишние пробелы по бокам.

// let userStr = '   I\'m learning JavaScript   ';

// function geStringToLowerCase(str) {
//   return str.toLowerCase().trim()
// }
// console.log(geStringToLowerCase(userStr));

// =========================================================================== //

// FIXME: 11. Задача
// Написать функцию, на вход которой подаётся 2 строки. Функция проверяет начинается ли первая строка со второй строки или заканчивается ей ?

// let userStr1 = 'one two one';
// let userStr2 = 'one';

// function checkString(str1, str2) {
//   return str1.startsWith(str2) || str1.endsWith(str2);
// }

// console.log(checkString(userStr1, userStr2));

// =========================================================================== //

// 12. Задача
// Написать функцию, на вход которой подаётся строка. Функция возвращает массив, состоящий из символов этой строки. Решить задачу двумя способами.

// function getArraySimbols(string) {
//   // return string.split('');
//   return Array.from(string)
// }

// console.log(getArraySimbols('params'));

// =========================================================================== //

// TODO: think about it
// Методы строк не решают всех возможных задач, возможно стоит решать и без них, но это не всегда

// 13. Задача
// ?Написать функцию, на вход которой подаётся 2 параметра(1 параметр - строка, 2 параметр - символ). Функция возвращает строку, состоящая без символа.




// Написать функцию, на вход которой подаётся массив чисел и одно число
// Функция возвращает новый массив со всеми числами, кроме того, который был передан вторым

// [4, 6, 54, 5, 5, 8, 6, 8, 7, 6, 4], 5
// [4, 6, 54, 8, 6, 8, 7, 6, 4]


// =========================================================================== //

// 14. Задача
// Написать функцию функцию, которая обрезает переданное слово со второго символа до предпоследнего включительно.


// =========================================================================== //

// 15. Задача
// FIXME: подумать, куда пропала буква
// Написать функцию cropString, на вход которой подаётся 3 параметра(1 параметр - строка, 2 - число(начало обрезки), 3 - число(конец обрезки)). Функция возвращает строку, состощая из символов, начиная от 2 параметра, заканчивая 3 вкл.

// Например:
// console.log(cropString("tester", 2, 4)); // "ste"

// =========================================================================== //

// FIXME: 16. Задача
// Написать функцию generateLink, на вход которой подаётся 3 параметра: адрес, текст, класс для тега a. Функция возвращает строку вида:
// <a href="ссылка" class="класс">текст</a>.

// Например:
// generateLink('https://vk.com', 'vk.com', 'start__link');
// <a href="https://vk.com" class="start__link">vk.com</a>.


// console.log(generateLink('<a https://developer.mozilla.org/ru/', 'class="start__link">', 'Ресурсы для разработчиков от разработчиков.</a>'));


// * Дополнительно
// Если класс не передаём, то ссылка создаётся без атрибута class

// =========================================================================== //

// FIXME: 17. Задача
// Написать функцию, на вход которой подаётся строка из функции generateLink 16 задачи. Функция возвращает объект, состоящий из свойств:

// link: адрес ссылки;
// content: содержимое тега a;
// className: имя класс;

// =========================================================================== //

// 18. Задача
// Написать функцию, на вход которой подаётся путь к файлу, например: C:\Program Files\project\test.js. Функция возвращает объект с двумя данными:

// Диск на котором лежит файл;
// Расширение файла;

//=========================================================================== //

// 19. Задача
// Написать функцию, на вход которой подаётся строка в kebab -case, функция возращает эту же строку в lowerCamelCase cssToJs("background-color") == 'backgroundColor'; cssToJs("list-style-image") == 'listStyleImage'; cssToJs("-webkit-transition") == 'webkitTransition';


// =========================================================================== //

// TODO: 20. Задача
// Написать функцию, на вход которой подаётся строка, содержащая класс по БЭМ, вида: class = "about__btn about__btn_disabled" В функцию подаётся строка только вида, описанного сверху. Вывести в консоль:

// Название блока;
// Название элемента;
// Название модифитора;


// =========================================================================== //

// 21. Задача
// Создать переменную: stringTask = "aaaccaaaccaacacaacc".Написать функцию, которая возвращает объект со следующими данными:

// Сколько % в строке символов "a" и "c";
// Программа должна работать с любым(в пределах разумного) количеством символов "a" и "с";

// let stringTask = 'aaaccaaaccaacacaacc';
// let stringLength = 0;
// let countLetterA = 0;
// let countLetterC = 0;
// let percentLetterA = 0;
// let percentLetterC = 0;

// =========================================================================== //

// 22. Задача
// Создать функцию, которая удаляет первый и последний символы строки, которая подаётся на вход в функцию.Функция возвращает новую строку.Если в строке меньше двух символов, то возвращать пустую строку.

// =========================================================================== //

// 23. Задача
// Написать функцию, которая возвращает перевёрнутую строку строку.

// 'world'  => 'dlrow'
// 'word'   => 'drow'

// =========================================================================== //

// 24. Задача
// Написать функцию, которая удаляет все пробелы из строки. Функция возвращает новую строку.

// =========================================================================== //

// 25. Задача
// Написать функцию, на вход которой подаётся 2 строки: имя и фамилия.Функция возвращает одну строку - инициалы через точки.

// Alexander Volkov-- > A.V.

// =========================================================================== //

// 26. Задача
// Написать функцию, на вход которой подаётся строка с текстом.Функция переворачивает все символы в слове наоборот, оставляя порядок слов тем же самым.

// Example:
// "The greatest victory is that which requires no battle" -- >
//   "ehT testaerg yrotciv si taht hcihw seriuqer on elttab"

// =========================================================================== //

// 27. Задача
// Написать функцию, которая преобразует массив строк в массив чисел, где каждое число - количество символов в строке. Функция возвращает новый массив.

// Example: ['a', 'as', 'red', 'test']-- > [1, 2, 3, 4]

// myArr = ['a', 'as', 'red', 'test'];


// =========================================================================== //

// 28. Задача
// Написать функцию, на вход которой подаётся массив с словами.Функция мутирует массив, переворачия все слова в массиве наоборот.


// const myArr = ['table', 'book', 'pen', 'lamp'];
// const myArr2 = [];


// =========================================================================== //

// 29. Задача
// Написать функцию, на вход которой подаётся строка. Функция возвращает объект, в котором есть 3 свойства:

// Количество заглавных букв;
// Количество строчных букв;
// Количество чисел;

// =========================================================================== //

// 30. Задача
// Написать функцию, на вход которой подаётся строка. Функция возвращает строку, удаляя оттуда все цифры

// Examples:
// '! !' -> '! !'
// '123456789' -> ''
// 'This looks5 grea8t!' -> 'This looks great!'

// =========================================================================== //

// 31. Задача
// Написать функцию, на вход которой подаётся строка.Функция возвращает строку, удаляя оттуда все сивмолы пробела

// '8 j 8   mBliB8g  imjB8B8  jl  B'               -- > '8j8mBliB8gimjB8B8jlB'
// '8 8 Bi fk8h B 8 BB8B B B  B888 c hl8 BhB fd'   -- > '88Bifk8hB8BB8BBBB888chl8BhBfd'
// '8aaaaa dddd r     '                            -- > '8aaaaaddddr'
// =========================================================================== //

// ★ Задачи повышенной сложности ★
// ★ 32. Задача(Продолжение 18 задачи)★
// Написать функцию, на вход которой подаётся путь к файлу, например: C: \Program Files\project\test.js.Функция возвращает объект с двумя данными:

// Диск на котором лежит файл;
// Папка, в которой лежит файл;
// Расширение файла;
// =========================================================================== //

// ★ 33. Задача ★
// Дан объект user, выполнить удаление свойств с помощью цикла, которые содержут слово delete в ключе.

// const user = {
//   name: "Lucas",
//   age: 29,
//   "delete me": 'text',
//   delete: 105,
//   'deleteProp': false
// };
// =========================================================================== //

// ★ 34. Задача ★
// Написать функцию stringClean, которая удаляет из строки все цифры.

// '8j8mBliB8gimjB8B8jlB' -- > 'jmBliBgimjBBjlB'
// '97Bifk8hB65BB3BBBB8451chl0BhBfd' -- > 'BifkhBBBBBBBchlBhBfd'
// '8aaaaa dd5dd 7r0' -- > 'aaaaa dd5dd r'
// =========================================================================== //

// ★ 35. Задача ★
// Написать функцию lettersCount, которая принимает строку в качестве аргумента и возвращает объект, в котором ключами являются все буквы, которые есть в строке, а значениями - их количество в строке.Большая буква и маленькая должны считаться одинаковой буквой.Если строка пустая, то вернуть пустой объект.

// Пример:
// console.log(lettersCount('aAAbbccde'));

// output:
// {
// a: 3,
// b: 2,
// c: 2,
//  d: 1,
// e: 1,
// }
// =========================================================================== //

// ★ 36. Задача ★
// Написать функцию, на вход которой подаётся строка с простым матемтическим выражением: 11 + 3, или 7 * 9. Функция возвращает результат сложения / умножения / деления и т.п.Примечание: функцию eval() не использовать!
// =========================================================================== //

// ★ 37. Задача ★
// Даны переменные типа string.Написать функцию, которая преобразует эти переменные к типу number, убрав лишние знаки.

// const a = "1_234_567_890"; // 1234567890
// const b = "4_5435_6548_9430"; // 4543565489430
// const c = "1_"; // 1
// const d = "_2"; // 2
// =========================================================================== //

// ★ 38. Задача ★
// Написать функцию, на вход которой в функцию подаётся строка дата в формате: "ДД.ММ.ГГГГ" Функция возвращает true, если такая дата существует, иначе false.

// Необходимо учесть високосные года;
// Функция работает только с положительными годами(наша эра);
// Выполнить программу без использования Date();
// =========================================================================== //

// ★ 39. Задача ★
// Написать программу - кодировщик: s = 'aabbbсaaaa' преобразуется в 'a2b3с1a4', то есть группы одинаковых символов исходной строки заменяются на этот символ и количество его повторений в этой позиции строки.Кодировщик должен учитывать регистр:

// "aBc" -> "a1B1c1"